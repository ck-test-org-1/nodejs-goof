name: Pull Request Workflow

on:
  pull_request:
    branches:
      - main  # Specify your target branch here

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install the Lacework CLI and SCA component
      - name: Install Lacework CLI
        run: |
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash
          lacework configure -a ${{ secrets.LW_ACCOUNT }}.lacework.net -k ${{ secrets.LW_API_KEY }} -s ${{ secrets.LW_API_SECRET }} --noninteractive
          lacework component install sca

      # Step 2: Check out the source branch (head of the pull request)
      - name: Checkout source branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }} # Checkout the source branch
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Run the Lacework SCA scan on the source branch and save to /tmp/
      - name: Run Lacework SCA Scan on Source Branch
        run: lacework sca scan ./ -f lw-json -o /tmp/lacework-scan-source.json

      # Step 4: Check out the target branch of the pull request
      - name: Checkout target branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }} # Checkout the target branch
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Run the Lacework SCA scan on the target branch and save to /tmp/
      - name: Run Lacework SCA Scan on Target Branch
        run: lacework sca scan ./ -f lw-json -o /tmp/lacework-scan-target.json

      # Step 6: Compare results from the two scans and generate SARIF output
      - name: Compare JSON Files and Generate SARIF
        run: lacework sca compare --new /tmp/lacework-scan-source.json --old /tmp/lacework-scan-target.json -o sarif
